<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptInicial.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>